class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        
        # n = len(matrix)
        # m = len(matrix[0])
        # for i in range(n):
        #     for j in range(m):
        #         if matrix[i][j] == target:
        #             return True
        # return False

        # def binary_search(arr,target):
        #     low = 0
        #     high = len(arr)-1
        #     while low<=high:
        #         mid = (low+high)//2
        #         if arr[mid] == target:
        #             return mid
        #         elif arr[mid]<target:
        #             low = mid+1
        #         else :
        #             high = mid-1
        #     return -1

        # n = len(matrix)
        # m = len(matrix[0])
        # for i in range(n):
        #     if matrix[i][0] <= target <= matrix[i][m-1]:
        #         return binary_search(matrix[i],target)!=-1
        # return False

        n = len(matrix)
        m = len(matrix[0])
        low = 0
        high = n*m-1

        while low<=high:
            mid = (low+high)//2
            row = mid//m
            col = mid%m
            if matrix[row][col] == target:
                return True
            elif matrix[row][col] < target:
                low = mid+1
            else :
                high = mid-1
        return False

